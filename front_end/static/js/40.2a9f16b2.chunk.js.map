{"version":3,"sources":["views/reports/sales_board.js","views/reports/CustomizeDeals.js"],"names":["SalesBoard","state","rowData","pinnedTopRowData","pinnedBottomRowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","columnDefs","headerName","field","filter","width","cellStyle","color","composeMailStatus","reportsName","pageName","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleComposeSidebar","status","onSetSidebarOpen","open","sidebarOpen","handleMainAndComposeSidebar","axios","get","then","response","tempdata","salesman","cars_out","on_pace_for","last_month","colWidth","window","innerWidth","i","length","minWidth","push","Object","assign","JSON","stringify","this","initTable","props","nextprops","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","currentStatus","style","height","paddingBottom","onClick","placeholder","onChange","e","target","value","Ripple","block","handleCustomize","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","floatingFilter","pagination","enableRtl","direction","rowHeight","React","Component","connect","app","calender","colourOptions","label","monthOptions","yearOptions","ComposeEmail","editorState","EditorState","createEmpty","basicPicker","Date","endPicker","selectedOption","onRadioChange","event","handleSidebarClose","emailTo","emailSub","emailCC","emailBCC","labelStyle","paddingTop","fontSize","zIndex","size","options","wheelPropagation","defaultChecked","name","sm","classNamePrefix","defaultValue","isDisabled","date","icon"],"mappings":"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","file":"static/js/40.2a9f16b2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardBody, Input, Button, } from \"reactstrap\"\r\nimport { AgGridReact } from \"ag-grid-react\"\r\nimport { ContextLayout } from \"../../utility/context/Layout\"\r\n// import { ChevronDown } from \"react-feather\"\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Customize from \"./CustomizeDeals\"\r\n\r\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\n\r\nimport \"../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\r\nimport \"../../assets/scss/plugins/tables/_customAgGridStyleOverride.scss\"\r\nimport \"../../assets/scss/pages/app-email.scss\"\r\n\r\nclass SalesBoard extends React.Component {\r\n    state = {\r\n        rowData: null,\r\n        pinnedTopRowData: [],\r\n        pinnedBottomRowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {},\r\n        columnDefs: [\r\n            {\r\n                headerName: \"Salesman\",\r\n                field: \"salesman\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Cars Out\",\r\n                field: \"cars_out\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"On Pace For\",\r\n                field: \"on_pace_for\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Last Month\",\r\n                field: \"last_month\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n        ],\r\n        composeMailStatus: false,\r\n        reportsName: \"Company Gross\",\r\n        pageName: \"company_gross\",\r\n    }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/aggrid/data\").then(response => {\r\n        // let rowData = response.data.data // replace for product\r\n        let tempdata = {\r\n            salesman: \"Zach Elliott\",\r\n            cars_out: \"2.5\",\r\n            on_pace_for: \"20.67\",\r\n            last_month: \"17.5\",\r\n        };\r\n\r\n        let colWidth = window.innerWidth;\r\n        let columnDefs = this.state.columnDefs\r\n        for (let i = 0; i < this.state.columnDefs.length; i++) {\r\n            columnDefs[i].width = (colWidth-(colWidth/5)) / this.state.columnDefs.length;\r\n            columnDefs[i].minWidth = 150;\r\n        }\r\n\r\n        let rowData = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            rowData.push(Object.assign({}, tempdata));\r\n        }\r\n\r\n        JSON.stringify(rowData)\r\n        this.setState({\r\n            rowData,\r\n            columnDefs\r\n        });\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.initTable(this.props);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps (nextprops) {\r\n    this.initTable(nextprops);\r\n  }\r\n\r\n  initTable(props) {\r\n    let pinnedBottomRowData = [];\r\n    pinnedBottomRowData.push({salesman: \"Total\", cars_out: \"11\", on_pace_for: \"17.5\", last_month: \"66.5\",});\r\n\r\n    this.setState({\r\n        pinnedBottomRowData,\r\n        composeMailStatus: false\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api\r\n    this.gridColumnApi = params.columnApi\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages()\r\n    })\r\n  }\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val)\r\n  }\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val))\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val\r\n      })\r\n    }\r\n  }\r\n  handleCustomize() {\r\n    this.handleComposeSidebar(\"open\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n  handleComposeSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        composeMailStatus: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        composeMailStatus: false\r\n      })\r\n    }\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n  handleMainAndComposeSidebar = () => {\r\n    this.handleComposeSidebar(\"close\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n\r\n  render() {\r\n    const { rowData, defaultColDef, pinnedBottomRowData } = this.state\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <Breadcrumbs breadCrumbTitle=\"Sales Board\" breadCrumbParent=\"Reports\" breadCrumbActive=\"Sales Board\"/>\r\n        <div className=\"email-application\">\r\n            <Customize handleComposeSidebar={this.handleComposeSidebar} currentStatus={this.state.composeMailStatus}/>\r\n            <Card className=\"agGrid-card\" style={{height: \"100% !important\", paddingBottom: \"2%\"}} onClick={this.handleMainAndComposeSidebar}>\r\n                <CardBody className=\"py-0\" style={{height: \"100% !important\"}}>\r\n                {\r\n                this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\" style={{height: \"100% !important\",width: \"100% !important\"}}>\r\n                        <div className=\"d-flex flex-wrap justify-content-end align-items-center\">\r\n                            <div className=\"mb-1\"></div>\r\n                            <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                    <Input placeholder=\"search...\" onChange={e => this.updateSearchQuery(e.target.value)} value={this.state.value}/>\r\n                                </div>\r\n                                <div className=\"customize-btn\">\r\n                                    <Button.Ripple block color=\"primary\" onClick={() => this.handleCustomize()}>\r\n                                        Customize\r\n                                    </Button.Ripple>\r\n                                </div>\r\n                                <div className=\"export-btn\">\r\n                                    <Button.Ripple color=\"primary\" onClick={() => this.gridApi.exportDataAsCsv()}>\r\n                                        Export as CSV\r\n                                    </Button.Ripple>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ContextLayout.Consumer>\r\n                            {context => (\r\n                            <AgGridReact\r\n                                gridOptions={{}}\r\n                                rowSelection=\"multiple\"\r\n                                defaultColDef={defaultColDef}\r\n                                columnDefs={this.state.columnDefs}\r\n                                rowData={rowData}\r\n                                onGridReady={this.onGridReady}\r\n                                floatingFilter={true}\r\n                                pagination={true}\r\n                                enableRtl={context.state.direction === \"rtl\"}\r\n                                \r\n                                pinnedBottomRowData={pinnedBottomRowData}\r\n                                rowHeight=\"40\"\r\n                            />\r\n                            )}\r\n                        </ContextLayout.Consumer>\r\n                    </div>\r\n                )}\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.calender\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SalesBoard);\r\n","import React from \"react\"\r\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"reactstrap\"\r\nimport Radio from \"../../components/@vuexy/radio/RadioVuexy\"\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport { Check } from \"react-feather\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { EditorState } from \"draft-js\"\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport \"../../assets/scss/plugins/extensions/editor.scss\"\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\n\r\nconst colourOptions = [\r\n    { value: \"0\", label: \"Active Deals\" },\r\n    { value: \"1\", label: \"Deleted Deals\" },\r\n    { value: \"2\", label: \"All Deals\" },\r\n]\r\n\r\nconst monthOptions = [\r\n    { value: \"1\", label: \"01 Jan\" },\r\n    { value: \"2\", label: \"02 Feb\" },\r\n    { value: \"3\", label: \"03 Mar\" },\r\n    { value: \"4\", label: \"04 Apr\" },\r\n    { value: \"5\", label: \"05 May\" },\r\n    { value: \"6\", label: \"06 Jun\" },\r\n    { value: \"7\", label: \"07 Jul\" },\r\n    { value: \"8\", label: \"08 Aug\" },\r\n    { value: \"9\", label: \"09 Sep\" },\r\n    { value: \"10\", label: \"10 Oct\" },\r\n    { value: \"11\", label: \"11 Nov\" },\r\n    { value: \"12\", label: \"12 Dec\" },\r\n]\r\n\r\nconst yearOptions = [\r\n    { value: \"0\", label: \"2020\" },\r\n    { value: \"1\", label: \"2019\" },\r\n    { value: \"2\", label: \"2018\" },\r\n    { value: \"3\", label: \"2017\" },\r\n    { value: \"4\", label: \"2016\" },\r\n    { value: \"5\", label: \"2015\" },\r\n    { value: \"6\", label: \"2014\" },\r\n    { value: \"7\", label: \"2013\" },\r\n    { value: \"8\", label: \"2012\" },\r\n    { value: \"9\", label: \"2011\" },\r\n    { value: \"10\", label: \"2010\" },\r\n    { value: \"11\", label: \"2009\" },\r\n    { value: \"12\", label: \"2008\" },\r\n]\r\n\r\nclass ComposeEmail extends React.Component {\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        basicPicker : new Date(),\r\n        endPicker: new Date(),\r\n\r\n        selectedOption: \"\",\r\n    }\r\n\r\n    onRadioChange = (event) => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSidebarClose = () => {\r\n        this.props.handleComposeSidebar(\"close\")\r\n        this.setState({\r\n            emailTo: \"\",\r\n            emailSub: \"\",\r\n            emailCC: \"\",\r\n            emailBCC: \"\",\r\n            editorState: EditorState.createEmpty()\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { basicPicker, endPicker } = this.state\r\n    const labelStyle = {\r\n        paddingTop: \"15px\",\r\n        color: \"#0c0000\",\r\n        fontSize: \"13px\",\r\n    }\r\n    return (\r\n    <Card className={`compose-email ${ this.props.currentStatus ? \"open\" : \"\" }`} style={{zIndex: \"11\"}}>\r\n        <CardHeader className=\"compose-mail-header align-items-center\">\r\n            <div className=\"compose-mail-title\">\r\n                <h3 className=\"text-bold-600 card-title\">Customize Report</h3>\r\n            </div>\r\n            <div className=\"close-compose-mail\" onClick={() => this.props.handleComposeSidebar(\"close\")} >\r\n                <X size={20} />\r\n            </div>\r\n        </CardHeader>\r\n        <PerfectScrollbar options={{ wheelPropagation: false }} >\r\n            <CardBody className=\"compose-mail-body p-1\">\r\n                <Radio\r\n                    label=\"Month to Date\"\r\n                    color=\"primary\"\r\n                    defaultChecked={true}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"MonthToDate\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Today\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Today\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Custom Range\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"CustomRange\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"All Time\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"AllTime\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Previous Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"PreviousMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Yesterday\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Yesterday\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Select Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"SelectMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={monthOptions[0]}\r\n                            name=\"color\"\r\n                            options={monthOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={yearOptions[0]}\r\n                            name=\"color\"\r\n                            options={yearOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle} >Basic</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={basicPicker}\r\n                            onChange={date => {\r\n                                this.setState({ basicPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle}>End</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={endPicker}\r\n                            onChange={date => {\r\n                                this.setState({ endPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"New Car\"\r\n                    defaultChecked={false}\r\n                />\r\n                <h5 style = {labelStyle}>Deleted</h5>\r\n                <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={colourOptions[0]}\r\n                    name=\"color\"\r\n                    options={colourOptions}\r\n                />\r\n                <div className=\"action-btns d-flex justify-content-end mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"danger\"\r\n                    className=\"mr-1\"\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    // disabled={this.state.emailTo.length && this.state.emailBody.length > 0 ? false : true}\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n            </CardBody>\r\n        </PerfectScrollbar>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComposeEmail\r\n"],"sourceRoot":""}