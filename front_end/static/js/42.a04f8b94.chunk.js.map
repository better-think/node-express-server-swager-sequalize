{"version":3,"sources":["views/reports/time_to_fund.js","views/reports/CustomizeDeals.js"],"names":["TimeToFund","state","rowData","pinnedTopRowData","pinnedBottomRowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","columnDefs","headerName","field","filter","width","cellStyle","color","composeMailStatus","reportsName","pageName","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleComposeSidebar","status","onSetSidebarOpen","open","sidebarOpen","handleMainAndComposeSidebar","axios","get","then","response","tempdata","date_sold","date_approved","client","stock","make","model","finance_person","front_end","back_end","total_gross","average_time","colWidth","window","innerWidth","i","length","minWidth","push","Object","assign","JSON","stringify","this","initTable","props","nextprops","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","onClick","className","placeholder","onChange","e","target","value","Ripple","block","handleCustomize","exportDataAsCsv","sm","xs","currentStatus","style","height","paddingBottom","Consumer","context","gridOptions","rowSelection","floatingFilter","pagination","enableRtl","direction","rowHeight","React","Component","connect","app","calender","colourOptions","label","monthOptions","yearOptions","ComposeEmail","editorState","EditorState","createEmpty","basicPicker","Date","endPicker","selectedOption","onRadioChange","event","handleSidebarClose","emailTo","emailSub","emailCC","emailBCC","labelStyle","paddingTop","fontSize","zIndex","size","options","wheelPropagation","defaultChecked","name","classNamePrefix","defaultValue","isDisabled","date","icon"],"mappings":"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","file":"static/js/42.a04f8b94.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardBody, Row, Col, Input, Button, } from \"reactstrap\"\r\nimport { AgGridReact } from \"ag-grid-react\"\r\nimport { ContextLayout } from \"../../utility/context/Layout\"\r\n// import { ChevronDown } from \"react-feather\"\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Customize from \"./CustomizeDeals\"\r\n\r\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\n\r\nimport \"../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\r\nimport \"../../assets/scss/plugins/tables/_customAgGridStyleOverride.scss\"\r\nimport \"../../assets/scss/pages/app-email.scss\"\r\n\r\nclass TimeToFund extends React.Component {\r\n    state = {\r\n        rowData: null,\r\n        pinnedTopRowData: [],\r\n        pinnedBottomRowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {},\r\n        columnDefs: [\r\n            {\r\n                headerName: \"Date Sold\",\r\n                field: \"date_sold\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Date Approved\",\r\n                field: \"date_approved\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Client\",\r\n                field: \"client\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Stock\",\r\n                field: \"stock\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Make\",\r\n                field: \"make\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Model\",\r\n                field: \"model\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Finance Person\",\r\n                field: \"finance_person\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Front End\",\r\n                field: \"front_end\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Back End\",\r\n                field: \"back_end\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Total Gross\",\r\n                field: \"total_gross\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Average Time\",\r\n                field: \"average_time\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n        ],\r\n        composeMailStatus: false,\r\n        reportsName: \"Company Gross\",\r\n        pageName: \"company_gross\",\r\n    }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/aggrid/data\").then(response => {\r\n      // let rowData = response.data.data // replace for product\r\n        let tempdata = {\r\n            date_sold: \"08/01/2020\",\r\n            date_approved: \"03/12/2020\",\r\n            client: \"Segar\",\r\n            stock: \"23050B\",\r\n            make: \"Dodge\",\r\n            model: \"Sprinter\",\r\n            finance_person: \"Scott Sefrit\",\r\n            front_end: \"$2,333.00\",\r\n            back_end: \"$688.00\",\r\n            total_gross: \"$3878.00\",\r\n            average_time: \"13\"\r\n        };\r\n\r\n        let colWidth = window.innerWidth;\r\n        let columnDefs = this.state.columnDefs\r\n        for (let i = 0; i < this.state.columnDefs.length; i++) {\r\n            columnDefs[i].width = (colWidth-(colWidth/5)) / this.state.columnDefs.length;\r\n            columnDefs[i].minWidth = 150;\r\n        }\r\n\r\n    let rowData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n        rowData.push(Object.assign({}, tempdata));\r\n    }\r\n\r\n    JSON.stringify(rowData)\r\n    this.setState({\r\n        rowData,\r\n        columnDefs\r\n    });\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.initTable(this.props);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps (nextprops) {\r\n    this.initTable(nextprops);\r\n  }\r\n\r\n  initTable(props) {\r\n    let pinnedBottomRowData = [];\r\n    pinnedBottomRowData.push({\r\n        date_sold: \"Total\",\r\n        stock: \"2305\",\r\n        front_end: \"$5,416,843.37\",\r\n        back_end: \"$2,454,697.21\",\r\n        total_gross: \"$7,871,540.94\",\r\n        average_time: \"13\"\r\n    });\r\n    pinnedBottomRowData.push({\r\n        date_sold: \"Average\",\r\n        total_gross: \"$2,465.00\",\r\n    });\r\n\r\n    this.setState({\r\n        pinnedBottomRowData,\r\n        composeMailStatus: false\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api\r\n    this.gridColumnApi = params.columnApi\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages()\r\n    })\r\n  }\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val)\r\n  }\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val))\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val\r\n      })\r\n    }\r\n  }\r\n  handleCustomize() {\r\n    this.handleComposeSidebar(\"open\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n  handleComposeSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        composeMailStatus: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        composeMailStatus: false\r\n      })\r\n    }\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n  handleMainAndComposeSidebar = () => {\r\n    this.handleComposeSidebar(\"close\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n\r\n  render() {\r\n    const { rowData, defaultColDef, pinnedBottomRowData } = this.state\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <Breadcrumbs breadCrumbTitle=\"Time To Fund\" breadCrumbParent=\"Reports\" breadCrumbActive=\"Time To Fund\"/>\r\n        <Card onClick={this.handleMainAndComposeSidebar}>\r\n            <CardBody>\r\n                <div className=\"d-flex flex-wrap justify-content-end align-items-center\">\r\n                    <div className=\"mb-1\"></div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                            <Input placeholder=\"search...\" onChange={e => this.updateSearchQuery(e.target.value)} value={this.state.value}/>\r\n                        </div>\r\n                        <div className=\"customize-btn\">\r\n                            <Button.Ripple block color=\"primary\" onClick={() => this.handleCustomize()}>\r\n                                Customize\r\n                            </Button.Ripple>\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                            <Button.Ripple color=\"primary\" onClick={() => this.gridApi.exportDataAsCsv()}>\r\n                                Export as CSV\r\n                            </Button.Ripple>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Average Time Approved:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">15 day(s)</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"6\"></Col>\r\n                </Row><br />\r\n                <Row>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Deals:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">2465</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Total Gross:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$7,871,540.94</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Front End:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$332,421.00</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Back End:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$523,116.00</Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row><br />\r\n                <Row>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Financed Deals:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">38</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Amount Financed:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$870,743.00</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Funded:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$332,421.00</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <Row>\r\n                            <Col sm=\"6\" xs=\"6\">Unfunded:</Col>\r\n                            <Col sm=\"6\" xs=\"6\">$523,116.00</Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n        <div className=\"email-application\">\r\n            <Customize handleComposeSidebar={this.handleComposeSidebar} currentStatus={this.state.composeMailStatus}/>\r\n            <Card className=\"agGrid-card\" style={{height: \"100% !important\", paddingBottom: \"2%\"}} onClick={this.handleMainAndComposeSidebar}>\r\n                <CardBody className=\"py-0\" style={{height: \"100% !important\"}}>\r\n                {\r\n                this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\" style={{height: \"100% !important\",width: \"100% !important\"}}>                        \r\n                        <ContextLayout.Consumer>\r\n                            {context => (\r\n                            <AgGridReact\r\n                                gridOptions={{}}\r\n                                rowSelection=\"multiple\"\r\n                                defaultColDef={defaultColDef}\r\n                                columnDefs={this.state.columnDefs}\r\n                                rowData={rowData}\r\n                                onGridReady={this.onGridReady}\r\n                                floatingFilter={true}\r\n                                pagination={true}\r\n                                enableRtl={context.state.direction === \"rtl\"}\r\n                                \r\n                                pinnedBottomRowData={pinnedBottomRowData}\r\n                                rowHeight=\"40\"\r\n                            />\r\n                            )}\r\n                        </ContextLayout.Consumer>\r\n                    </div>\r\n                )}\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state.calender\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(TimeToFund);\r\n","import React from \"react\"\r\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"reactstrap\"\r\nimport Radio from \"../../components/@vuexy/radio/RadioVuexy\"\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport { Check } from \"react-feather\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { EditorState } from \"draft-js\"\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport \"../../assets/scss/plugins/extensions/editor.scss\"\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\n\r\nconst colourOptions = [\r\n    { value: \"0\", label: \"Active Deals\" },\r\n    { value: \"1\", label: \"Deleted Deals\" },\r\n    { value: \"2\", label: \"All Deals\" },\r\n]\r\n\r\nconst monthOptions = [\r\n    { value: \"1\", label: \"01 Jan\" },\r\n    { value: \"2\", label: \"02 Feb\" },\r\n    { value: \"3\", label: \"03 Mar\" },\r\n    { value: \"4\", label: \"04 Apr\" },\r\n    { value: \"5\", label: \"05 May\" },\r\n    { value: \"6\", label: \"06 Jun\" },\r\n    { value: \"7\", label: \"07 Jul\" },\r\n    { value: \"8\", label: \"08 Aug\" },\r\n    { value: \"9\", label: \"09 Sep\" },\r\n    { value: \"10\", label: \"10 Oct\" },\r\n    { value: \"11\", label: \"11 Nov\" },\r\n    { value: \"12\", label: \"12 Dec\" },\r\n]\r\n\r\nconst yearOptions = [\r\n    { value: \"0\", label: \"2020\" },\r\n    { value: \"1\", label: \"2019\" },\r\n    { value: \"2\", label: \"2018\" },\r\n    { value: \"3\", label: \"2017\" },\r\n    { value: \"4\", label: \"2016\" },\r\n    { value: \"5\", label: \"2015\" },\r\n    { value: \"6\", label: \"2014\" },\r\n    { value: \"7\", label: \"2013\" },\r\n    { value: \"8\", label: \"2012\" },\r\n    { value: \"9\", label: \"2011\" },\r\n    { value: \"10\", label: \"2010\" },\r\n    { value: \"11\", label: \"2009\" },\r\n    { value: \"12\", label: \"2008\" },\r\n]\r\n\r\nclass ComposeEmail extends React.Component {\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        basicPicker : new Date(),\r\n        endPicker: new Date(),\r\n\r\n        selectedOption: \"\",\r\n    }\r\n\r\n    onRadioChange = (event) => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSidebarClose = () => {\r\n        this.props.handleComposeSidebar(\"close\")\r\n        this.setState({\r\n            emailTo: \"\",\r\n            emailSub: \"\",\r\n            emailCC: \"\",\r\n            emailBCC: \"\",\r\n            editorState: EditorState.createEmpty()\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { basicPicker, endPicker } = this.state\r\n    const labelStyle = {\r\n        paddingTop: \"15px\",\r\n        color: \"#0c0000\",\r\n        fontSize: \"13px\",\r\n    }\r\n    return (\r\n    <Card className={`compose-email ${ this.props.currentStatus ? \"open\" : \"\" }`} style={{zIndex: \"11\"}}>\r\n        <CardHeader className=\"compose-mail-header align-items-center\">\r\n            <div className=\"compose-mail-title\">\r\n                <h3 className=\"text-bold-600 card-title\">Customize Report</h3>\r\n            </div>\r\n            <div className=\"close-compose-mail\" onClick={() => this.props.handleComposeSidebar(\"close\")} >\r\n                <X size={20} />\r\n            </div>\r\n        </CardHeader>\r\n        <PerfectScrollbar options={{ wheelPropagation: false }} >\r\n            <CardBody className=\"compose-mail-body p-1\">\r\n                <Radio\r\n                    label=\"Month to Date\"\r\n                    color=\"primary\"\r\n                    defaultChecked={true}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"MonthToDate\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Today\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Today\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Custom Range\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"CustomRange\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"All Time\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"AllTime\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Previous Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"PreviousMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Yesterday\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Yesterday\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Select Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"SelectMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={monthOptions[0]}\r\n                            name=\"color\"\r\n                            options={monthOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={yearOptions[0]}\r\n                            name=\"color\"\r\n                            options={yearOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle} >Basic</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={basicPicker}\r\n                            onChange={date => {\r\n                                this.setState({ basicPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle}>End</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={endPicker}\r\n                            onChange={date => {\r\n                                this.setState({ endPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"New Car\"\r\n                    defaultChecked={false}\r\n                />\r\n                <h5 style = {labelStyle}>Deleted</h5>\r\n                <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={colourOptions[0]}\r\n                    name=\"color\"\r\n                    options={colourOptions}\r\n                />\r\n                <div className=\"action-btns d-flex justify-content-end mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"danger\"\r\n                    className=\"mr-1\"\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    // disabled={this.state.emailTo.length && this.state.emailBody.length > 0 ? false : true}\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n            </CardBody>\r\n        </PerfectScrollbar>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComposeEmail\r\n"],"sourceRoot":""}