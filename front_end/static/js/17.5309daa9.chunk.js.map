{"version":3,"sources":["views/deal_management/AddEventSidebar.js","views/deal_management/AddEventButton.js","redux/actions/calendar/index.js","views/deal_management/newDeal.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["eventColors","business","work","personal","others","React","Component","connect","handleSidebar","bool","dispatch","type","status","handleSelectedEvent","event","props","Button","Ripple","color","onClick","className","size","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","makeData","map","d","children","colourOptions","value","label","NewDealApp","state","disabledRange","Date","data","holdback","clientName","year","payableGross","pack","clientPhone","make","miles","newCar","docfee","stockNo","model","amountfinanced","year1","payoffAmount","miles1","discount","makeModel","amountverify","acv","warrantysaleprice","warrantyCost","gapsaleprice","gapCost","miscfinancePrice","bankReserve","addDeskmanager","deskmanagers","newDeskManagerName","showAddSalePerson","salePeople","newSalePersonName","showAddFlooredBy","flooreds","newFlooredName","showAddLendSource","lendsources","newLendSourceName","showAddFinancePersonInput","financePeople","newFinanceName","showAddNewLendingSource","lendingSources","newLendingSourceName","showAddNewWarrantyProvider","warranties","newWarrantyProviderName","showAddNewGapInsurance","gapInsurances","newGapInsurnance","renderEditable","cellInfo","style","backgroundColor","contentEditable","suppressContentEditableWarning","onBlur","e","index","column","id","target","innerHTML","setState","dangerouslySetInnerHTML","__html","addRowData","tableData","deleteRowData","showAddDeskManager","addNewDeskManager","console","log","charAt","toUpperCase","slice","showNewSalePerson","addNewSalePerson","addflooredByData","showAddLendSourceInput","addNewLendSourceName","addNewFinancePersonName","showLendingSourceInput","addNewLendingSourceName","addNewNewWarrantyProvider","addNewGapInsurance","handleNewCarChange","this","height","Card","CardHeader","CardTitle","CardBody","Form","onSubmit","handleSubmit","Row","Col","lg","md","sm","xs","FormGroup","Label","for","Input","onChange","name","valid","isValid","invalid","disabled","icon","options","dateFormat","disable","from","to","date","xl","placeholder","outline","classNamePrefix","defaultValue","isClearable","rows","city","columns","Header","accessor","amount","note","defaultPageSize","app","calendar","CheckBoxesVuexy","defaultChecked","checked"],"mappings":"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","file":"static/js/17.5309daa9.chunk.js","sourcesContent":["import React from \"react\"\nimport { X, Tag } from \"react-feather\"\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\"\nimport Flatpickr from \"react-flatpickr\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport \"../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\n\nconst eventColors = {\n  business: \"chip-success\",\n  work: \"chip-warning\",\n  personal: \"chip-danger\",\n  others: \"chip-primary\"\n}\nclass AddEvent extends React.Component {\n  state = {\n    startDate: new Date(),\n    endDate: new Date(),\n    title: \"\",\n    label: null,\n    allDay: true,\n    selectable: true\n  }\n  handleDateChange = date => {\n    this.setState({\n      startDate: date\n    })\n  }\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: date\n    })\n  }\n\n  handleLabelChange = label => {\n    this.setState({\n      label\n    })\n  }\n\n  handleAddEvent = id => {\n    this.props.handleSidebar(false)\n    this.props.addEvent({\n      id: id,\n      title: this.state.title,\n      start: this.state.startDate,\n      end: this.state.endDate,\n      label: this.state.label === null ? \"others\" : this.state.label,\n      allDay: this.state.allDay,\n      selectable: this.state.selectable\n    })\n    this.setState({\n      startDate: new Date(),\n      endDate: new Date(),\n      title: \"\",\n      label: null,\n      allDay: true,\n      selectable: true\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      title: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.title,\n      url: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.url,\n      startDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.start),\n      endDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.end),\n      label: nextProps.eventInfo === null ? null : nextProps.eventInfo.label,\n      allDay: nextProps.eventInfo === null ? true : nextProps.eventInfo.allDay,\n      selectable:\n        nextProps.eventInfo === null ? true : nextProps.eventInfo.selectable\n    })\n  }\n\n  render() {\n    let events = this.props.events.map(i => i.id)\n    let lastId = events.pop()\n    let newEventId = lastId + 1\n    return (\n      <div\n        className={`add-event-sidebar ${\n          this.props.sidebar ? \"show\" : \"hidden\"\n        }`}\n      >\n        <div className=\"header d-flex justify-content-between\">\n          <h3 className=\"text-bold-600 mb-0\">\n            {this.props.eventInfo !== null &&\n            this.props.eventInfo.title.length > 0\n              ? \"Update Event\"\n              : \"Add Event\"}\n          </h3>\n          <div\n            className=\"close-icon cursor-pointer\"\n            onClick={() => this.props.handleSidebar(false)}\n          >\n            <X size={20} />\n          </div>\n        </div>\n        <div className=\"add-event-body\">\n          <div className=\"category-action d-flex justify-content-between my-50\">\n            <div className=\"event-category\">\n              {this.state.label !== null ? (\n                <div className={`chip ${eventColors[this.state.label]}`}>\n                  <div className=\"chip-body\">\n                    <div className=\"chip-text text-capitalize\">\n                      {this.state.label}\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"category-dropdown\">\n              <UncontrolledDropdown>\n                <DropdownToggle tag=\"div\" className=\"cursor-pointer\">\n                  <Tag size={18} />\n                </DropdownToggle>\n                <DropdownMenu tag=\"ul\" right>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"business\")}\n                  >\n                    <span className=\"bullet bullet-success bullet-sm mr-50\"></span>\n                    <span>Business</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"work\")}\n                  >\n                    <span className=\"bullet bullet-warning bullet-sm mr-50\"></span>\n                    <span>Work</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"personal\")}\n                  >\n                    <span className=\"bullet bullet-danger bullet-sm mr-50\"></span>\n                    <span>Personal</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"others\")}\n                  >\n                    <span className=\"bullet bullet-primary bullet-sm mr-50\"></span>\n                    <span>Others</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className=\"add-event-fields mt-2\">\n            <FormGroup className=\"form-label-group\">\n              <Input\n                type=\"text\"\n                id=\"EventTitle\"\n                placeholder=\"Event Title\"\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <Label for=\"EventTitle\">Event Title</Label>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"startDate\">Start Date</Label>\n              <Flatpickr\n                id=\"startDate\"\n                className=\"form-control\"\n                value={this.state.startDate}\n                onChange={date => this.handleDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"endDate\">End Date</Label>\n              <Flatpickr\n                id=\"endDate\"\n                className=\"form-control\"\n                value={this.state.endDate}\n                onChange={date => this.handleEndDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n          </div>\n          <hr className=\"my-2\" />\n          <div className=\"add-event-actions text-right\">\n            <Button.Ripple\n              disabled={this.state.title.length > 0 ? false : true}\n              color=\"primary\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (\n                  this.props.eventInfo === null ||\n                  this.props.eventInfo.title.length <= 0\n                )\n                  this.handleAddEvent(newEventId)\n                else\n                  this.props.updateEvent({\n                    id: this.props.eventInfo.id,\n                    title: this.state.title,\n                    label: this.state.label,\n                    start: this.state.startDate,\n                    end: this.state.endDate,\n                    allDay: true,\n                    selectable: true\n                  })\n              }}\n            >\n              {this.props.eventInfo !== null &&\n              this.props.eventInfo.title.length > 0\n                ? \"Update Event\"\n                : \"Add Event\"}\n            </Button.Ripple>\n            <Button.Ripple\n              className=\"ml-1\"\n              color=\"flat-danger\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (this.props.handleSelectedEvent)\n                  this.props.handleSelectedEvent(null)\n                else return null\n              }}\n            >\n              Cancel\n            </Button.Ripple>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddEvent\n","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport { Plus } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  handleSidebar,\n  handleSelectedEvent\n} from \"../../redux/actions/calendar/index\"\nconst AddEventButton = props => {\n  return (\n    <Button.Ripple\n      color=\"primary\"\n      onClick={() => {\n        props.handleSidebar(true)\n        props.handleSelectedEvent(null)\n      }}\n      className=\"d-sm-block d-none\"\n    >\n      {\" \"}\n      <Plus size={15} /> <span className=\"align-middle\">Add</span>\n    </Button.Ripple>\n  )\n}\n\nexport default connect(null, { handleSidebar, handleSelectedEvent })(\n  AddEventButton\n)\n","import axios from \"axios\"\n\nexport const fetchEvents = () => {\n  return async dispatch => {\n    await axios\n      .get(\"/api/apps/calendar/events\")\n      .then(response => {\n        dispatch({ type: \"FETCH_EVENTS\", events: response.data })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const handleSidebar = bool => {\n  return dispatch => dispatch({ type: \"HANDLE_SIDEBAR\", status: bool })\n}\n\nexport const addEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"ADD_EVENT\", event })\n  }\n}\nexport const updateEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_EVENT\", event })\n  }\n}\n\nexport const updateDrag = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_DRAG\", event })\n  }\n}\n\nexport const updateResize = event => {\n  return dispatch => {\n    dispatch({ type: \"EVENT_RESIZE\", event })\n  }\n}\n\nexport const handleSelectedEvent = event => {\n  return dispatch => dispatch({ type: \"HANDLE_SELECTED_EVENT\", event })\n}\n","import React from \"react\"\r\nimport { \r\n  Card, \r\n  CardBody, \r\n  Button, \r\n  CardHeader,\r\n  CardTitle,\r\n  FormGroup,\r\n  Form, \r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\nimport AddEventSidebar from \"./AddEventSidebar\"\r\nimport AddEventButton from \"./AddEventButton\"\r\n\r\nimport { \r\n  Check, \r\n  Trash2, \r\n  Plus,\r\n  X\r\n} from \"react-feather\"\r\n\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport Select from \"react-select\"\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport ReactTable from \"react-table\"\r\nimport {connect} from \"react-redux\"\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\"\r\n\r\nimport \"react-table/react-table.css\"\r\nimport \"../../assets/scss/plugins/extensions/react-tables.scss\"\r\n\r\nimport namor from \"namor\"\r\n\r\nconst range = len => {\r\n  const arr = []\r\n  for (let i = 0; i < len; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst newPerson = () => {\r\n  const statusChance = Math.random()\r\n  return {\r\n    firstName: namor.generate({ words: 1, numbers: 0 }),\r\n    lastName: namor.generate({ words: 1, numbers: 0 }),\r\n    age: Math.floor(Math.random() * 30),\r\n    visits: Math.floor(Math.random() * 10),\r\n    progress: Math.floor(Math.random() * 10),\r\n    status:\r\n      statusChance > 0.66\r\n        ? \"relationship\"\r\n        : statusChance > 0.33\r\n        ? \"complicated\"\r\n        : \"single\"\r\n  }\r\n}\r\n\r\nexport function makeData(len = 0) {\r\n  return range(len).map(d => {\r\n    return {\r\n      ...newPerson(),\r\n      children: range(10).map(newPerson)\r\n    }\r\n  })\r\n}\r\n\r\nconst colourOptions = [\r\n  { value: \"ocean\", label: \"Ocean\" },\r\n  { value: \"blue\", label: \"Blue\" },\r\n  { value: \"purple\", label: \"Purple\" },\r\n  { value: \"red\", label: \"Red\" },\r\n  { value: \"orange\", label: \"Orange\" }\r\n]\r\n\r\nclass NewDealApp extends React.Component {\r\n  state = {\r\n    disabledRange : new Date(),\r\n    data: makeData(),\r\n    holdback: \"\",\r\n    clientName: \"\",\r\n    year: \"\",\r\n    payableGross: \"\",\r\n    pack: \"\",\r\n    clientPhone: \"\",\r\n    make: \"\",\r\n    miles: \"\",\r\n    newCar: true,\r\n    docfee: \"\",\r\n    stockNo: \"\",\r\n    model: \"\",\r\n    amountfinanced: \"\",\r\n    year1: \"\",\r\n    payoffAmount: \"\",\r\n    miles1: \"\",\r\n    discount: \"\",\r\n    makeModel: \"\",\r\n    amountverify: \"\",\r\n    acv: \"\",\r\n    warrantysaleprice: \"\",\r\n    warrantyCost: \"\",\r\n    gapsaleprice: \"\",\r\n    gapCost: \"\",\r\n    miscfinancePrice: \"\",\r\n    bankReserve: \"\",\r\n    addDeskmanager: false,\r\n    deskmanagers: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newDeskManagerName: \"\",\r\n    showAddSalePerson: false,\r\n    salePeople: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newSalePersonName: \"\",\r\n    showAddFlooredBy: false,\r\n    flooreds: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newFlooredName: \"\",\r\n    showAddLendSource: false,\r\n    lendsources: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newLendSourceName: \"\",\r\n    showAddFinancePersonInput: false,\r\n    financePeople: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newFinanceName: \"\",\r\n    showAddNewLendingSource: false,\r\n    lendingSources: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newLendingSourceName: \"\",\r\n    showAddNewWarrantyProvider: false,\r\n    warranties: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newWarrantyProviderName: \"\",\r\n    showAddNewGapInsurance: false,\r\n    gapInsurances: [\r\n      { value: \"ocean\", label: \"Ocean\" },\r\n      { value: \"blue\", label: \"Blue\" },\r\n      { value: \"purple\", label: \"Purple\" },\r\n      { value: \"red\", label: \"Red\" },\r\n      { value: \"orange\", label: \"Orange\" }\r\n    ],\r\n    newGapInsurnance: \"\"\r\n  }\r\n\r\n  renderEditable = cellInfo => {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: \"#fafafa\" }}\r\n        contentEditable\r\n        suppressContentEditableWarning\r\n        onBlur={e => {\r\n          const data = [...this.state.data]\r\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML\r\n          this.setState({ data })\r\n        }}\r\n        dangerouslySetInnerHTML={{\r\n          __html: this.state.data[cellInfo.index][cellInfo.column.id]\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  addRowData = () => {\r\n    let tableData = this.state.data;\r\n    tableData.push({});\r\n    this.setState({\r\n      data: tableData\r\n    })\r\n  }\r\n\r\n  deleteRowData = () => {\r\n    \r\n  }\r\n\r\n  showAddDeskManager = () => {\r\n    let { addDeskmanager } = this.state\r\n    if(addDeskmanager === true) {\r\n      addDeskmanager = false\r\n    } else {\r\n      addDeskmanager = true\r\n    }\r\n    this.setState({\r\n      addDeskmanager\r\n    })\r\n  }\r\n\r\n  addNewDeskManager = () => {\r\n    console.log(\"addNewDeskManager\");\r\n    let { newDeskManagerName, deskmanagers } = this.state\r\n    deskmanagers.push({value: newDeskManagerName, label: newDeskManagerName.charAt(0).toUpperCase() + newDeskManagerName.slice(1)})\r\n    this.setState({\r\n      addDeskmanager: false,\r\n      deskmanagers,\r\n      newDeskManagerName: \"\"\r\n    })\r\n  }\r\n\r\n  showNewSalePerson = () => {\r\n    let { showAddSalePerson } = this.state\r\n    if(showAddSalePerson === true) {\r\n      showAddSalePerson = false\r\n    } else {\r\n      showAddSalePerson = true\r\n    }\r\n    this.setState({\r\n      showAddSalePerson\r\n    })\r\n  }\r\n\r\n  addNewSalePerson = () => {\r\n    console.log(\"addNewSalePerson\");\r\n    let { newSalePersonName, salePeople } = this.state\r\n    salePeople.push({value: newSalePersonName, label: newSalePersonName.charAt(0).toUpperCase() + newSalePersonName.slice(1)})\r\n    this.setState({\r\n      showAddSalePerson: false,\r\n      salePeople,\r\n      newSalePersonName: \"\"\r\n    })\r\n  }\r\n\r\n  showAddFlooredBy = () => {\r\n    let { showAddFlooredBy } = this.state\r\n    if(showAddFlooredBy === true) {\r\n      showAddFlooredBy = false\r\n    } else {\r\n      showAddFlooredBy = true\r\n    }\r\n    this.setState({\r\n      showAddFlooredBy\r\n    })\r\n  }\r\n\r\n  addflooredByData = () => {\r\n    console.log(\"addNewSalePerson\");\r\n    let { newFlooredName, flooreds } = this.state\r\n    flooreds.push({value: newFlooredName, label: newFlooredName.charAt(0).toUpperCase() + newFlooredName.slice(1)})\r\n    this.setState({\r\n      showAddFlooredBy: false,\r\n      flooreds,\r\n      newFlooredName: \"\"\r\n    })\r\n  }\r\n\r\n  showAddLendSourceInput = () => {\r\n    let { showAddLendSource } = this.state\r\n    if(showAddLendSource) {\r\n      showAddLendSource = false\r\n    } else {\r\n      showAddLendSource = true\r\n    }\r\n    this.setState({\r\n      showAddLendSource\r\n    })\r\n  }\r\n\r\n  addNewLendSourceName = () => {\r\n    console.log(\"addNewLendSourceName\");\r\n    let { newLendSourceName, lendsources } = this.state\r\n    lendsources.push({value: newLendSourceName, label: newLendSourceName.charAt(0).toUpperCase() + newLendSourceName.slice(1)})\r\n    this.setState({\r\n      showAddLendSource: false,\r\n      lendsources,\r\n      newLendSourceName: \"\"\r\n    })\r\n  }\r\n\r\n  showAddFinancePersonInput = () => {\r\n    let { showAddFinancePersonInput } = this.state\r\n    if(showAddFinancePersonInput) {\r\n      showAddFinancePersonInput = false\r\n    } else {\r\n      showAddFinancePersonInput = true\r\n    }\r\n    this.setState({\r\n      showAddFinancePersonInput\r\n    })\r\n  }\r\n  \r\n  addNewFinancePersonName = () => {\r\n    console.log(\"addNewFinancePersonName\");\r\n    let { newFinanceName, financePeople} = this.state\r\n    financePeople.push({value: newFinanceName, label: newFinanceName.charAt(0).toUpperCase() + newFinanceName.slice(1)})\r\n    this.setState({\r\n      showAddFinancePersonInput: false,\r\n      financePeople,\r\n      newFinanceName: \"\"\r\n    })\r\n  }\r\n\r\n  showLendingSourceInput = () => {\r\n    let { showAddNewLendingSource } = this.state\r\n    if(showAddNewLendingSource) {\r\n      showAddNewLendingSource = false\r\n    } else {\r\n      showAddNewLendingSource = true\r\n    }\r\n    this.setState({\r\n      showAddNewLendingSource\r\n    })\r\n  }\r\n  \r\n  addNewLendingSourceName = () => {\r\n    console.log(\"addNewLendingSourceName\");\r\n    let { newLendingSourceName, lendingSources} = this.state\r\n    lendingSources.push({value: newLendingSourceName, label: newLendingSourceName.charAt(0).toUpperCase() + newLendingSourceName.slice(1)})\r\n    this.setState({\r\n      showAddNewLendingSource: false,\r\n      lendingSources,\r\n      newLendingSourceName: \"\"\r\n    })\r\n  }\r\n\r\n  showAddNewWarrantyProvider = () => {\r\n    let { showAddNewWarrantyProvider } = this.state\r\n    if(showAddNewWarrantyProvider) {\r\n      showAddNewWarrantyProvider = false\r\n    } else {\r\n      showAddNewWarrantyProvider = true\r\n    }\r\n    this.setState({\r\n      showAddNewWarrantyProvider\r\n    })\r\n  }\r\n  \r\n  addNewNewWarrantyProvider = () => {\r\n    console.log(\"addNewNewWarrantyProvider\");\r\n    let { newWarrantyProviderName, warranties} = this.state\r\n    warranties.push({value: newWarrantyProviderName, label: newWarrantyProviderName.charAt(0).toUpperCase() + newWarrantyProviderName.slice(1)})\r\n    this.setState({\r\n      showAddNewWarrantyProvider: false,\r\n      warranties,\r\n      newWarrantyProviderName: \"\"\r\n    })\r\n  }\r\n\r\n  showAddNewGapInsurance = () => {\r\n    let { showAddNewGapInsurance } = this.state\r\n    if(showAddNewGapInsurance) {\r\n      showAddNewGapInsurance = false\r\n    } else {\r\n      showAddNewGapInsurance = true\r\n    }\r\n    this.setState({\r\n      showAddNewGapInsurance\r\n    })\r\n  }\r\n  \r\n  addNewGapInsurance = () => {\r\n    console.log(\"addNewGapInsurance\");\r\n    let {newGapInsurnance, gapInsurances} = this.state\r\n    gapInsurances.push({value: newGapInsurnance, label: newGapInsurnance.charAt(0).toUpperCase() + newGapInsurnance.slice(1)})\r\n    this.setState({\r\n      showAddNewGapInsurance: false,\r\n      gapInsurances,\r\n      newGapInsurnance: \"\"\r\n    })\r\n  }\r\n\r\n  handleNewCarChange = (e) => {\r\n    let newcar = this.state.newCar;\r\n    if(newcar === false) {\r\n      return this.setState({\r\n        newCar: true\r\n      })\r\n    }\r\n    this.setState({\r\n      newCar: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { disabledRange, \r\n      data, \r\n      newCar, \r\n      addDeskmanager, \r\n      deskmanagers, \r\n      newDeskManagerName, \r\n      showAddSalePerson, \r\n      salePeople, \r\n      newSalePersonName,\r\n      newFlooredName,\r\n      showAddFlooredBy,\r\n      flooreds,\r\n      lendsources,\r\n      showAddLendSource,\r\n      newLendSourceName,\r\n      showAddFinancePersonInput,\r\n      financePeople,\r\n      newFinanceName,\r\n      newLendingSourceName,\r\n      lendingSources,\r\n      showAddNewLendingSource,\r\n      showAddNewWarrantyProvider,\r\n      newWarrantyProviderName,\r\n      warranties,\r\n      showAddNewGapInsurance,\r\n      gapInsurances,\r\n      newGapInsurnance\r\n    } = this.state;\r\n    return (\r\n        <div>\r\n        <div style={{height: \"70px\"}}>\r\n          <h2>New Deal</h2>\r\n        </div>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Customer and Vehicle Information</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"holdback\">Holdback</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ holdback: e.target.value })}\r\n                      value={this.state.holdback}\r\n                      id=\"holdback\"\r\n                      name=\"holdback\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                      disabled={newCar}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a holdback\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"clientPhone\">Client Phone</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ clientPhone: e.target.value })}\r\n                      value={this.state.clientPhone}\r\n                      id=\"clientPhone\"\r\n                      name=\"clientPhone\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Client Phone\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"make\">Make<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ make: e.target.value })}\r\n                      value={this.state.make}\r\n                      id=\"make\"\r\n                      name=\"make\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Make\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"clientName\">Client Name <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ clientName: e.target.value })}\r\n                      value={this.state.clientName}\r\n                      id=\"clientName\"\r\n                      name=\"clientName\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Client Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"miles\">Miles</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ miles: e.target.value })}\r\n                      value={this.state.miles}\r\n                      id=\"miles\"\r\n                      name=\"miles\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Miles\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"stockNo\">Stock No<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ stockNo: e.target.value })}\r\n                      value={this.state.stockNo}\r\n                      id=\"stockNo\"\r\n                      name=\"stockNo\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">Please enter a City</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"year\">Year<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ year: e.target.value })}\r\n                      value={this.state.year}\r\n                      id=\"year\"\r\n                      name=\"year\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter Year\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <br/>\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\"New Car\"\r\n                      onChange = {this.handleNewCarChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"model\">Model<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ model: e.target.value })}\r\n                      value={this.state.model}\r\n                      id=\"model\"\r\n                      name=\"model\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">Please enter a City</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"dateSold\">Date Sold</Label>\r\n                    <Flatpickr\r\n                      className=\"form-control\"\r\n                      value={disabledRange}\r\n                      options={{ \r\n                        dateFormat: \"Y-m-d\",\r\n                        disable: [\r\n                            {\r\n                                from: \"2020-02-01\",\r\n                                to: \"2020-02-10\"\r\n                            },\r\n                            {\r\n                                from: \"2020-02-20\",\r\n                                to: \"2020-02-25\"\r\n                            }\r\n                        ]\r\n                      }}\r\n                      onChange={date => {\r\n                        this.setState({ disabledRange : date });\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"docfee\">Doc Fee</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ docfee: e.target.value })}\r\n                      value={this.state.docfee}\r\n                      id=\"docfee\"\r\n                      name=\"docfee\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Doc Fee\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"payableGross\">Payable Gross</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ payableGross: e.target.value })}\r\n                      value={this.state.payableGross}\r\n                      id=\"payableGross\"\r\n                      name=\"payableGross\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Payable Gross\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"pack\">Pack</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ pack: e.target.value })}\r\n                      value={this.state.pack}\r\n                      id=\"pack\"\r\n                      name=\"pack\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a First Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"deskmanager\">Desk Manager</Label>\r\n                    <Row>\r\n                      {\r\n                        addDeskmanager === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"9\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Desk Manager\"\r\n                              value={newDeskManagerName}\r\n                              onChange={(e)=> this.setState({newDeskManagerName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewDeskManager}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddDeskManager}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"4\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={deskmanagers[1]}\r\n                          name=\"clear\"\r\n                          options={deskmanagers}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        addDeskmanager === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddDeskManager}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"addsalesperson\">Add Sales Person</Label>\r\n                    <Row>\r\n                      {\r\n                        showAddSalePerson === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"9\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Sale person\"\r\n                              value={newSalePersonName}\r\n                              onChange={(e)=> this.setState({ newSalePersonName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewSalePerson}\r\n                              >\r\n                                <Check size={30}   />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showNewSalePerson}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"4\" sm=\"9\" xs=\"4\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={salePeople[1]}\r\n                          name=\"clear\"\r\n                          options={salePeople}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddSalePerson === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showNewSalePerson}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Flooring</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"flooredBy\">Floored By</Label>\r\n                    <Row>\r\n                      {\r\n                        showAddFlooredBy === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newFlooredName}\r\n                              onChange={(e)=> this.setState({newFlooredName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addflooredByData}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddFlooredBy}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={flooreds[1]}\r\n                          name=\"clear\"\r\n                          options={flooreds}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddFlooredBy === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddFlooredBy}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\"Paid\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"sold\">Date Sold</Label>\r\n                    <Flatpickr\r\n                      className=\"form-control\"\r\n                      value={disabledRange}\r\n                      options={{ \r\n                        dateFormat: \"Y-m-d\",\r\n                        disable: [\r\n                            {\r\n                                from: \"2020-02-01\",\r\n                                to: \"2020-02-10\"\r\n                            },\r\n                            {\r\n                                from: \"2020-02-20\",\r\n                                to: \"2020-02-25\"\r\n                            }\r\n                        ]\r\n                      }}\r\n                      onChange={date => {\r\n                        this.setState({ disabledRange : date });\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Lead Source</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"LeadDeskmanager\">Lead Source</Label>\r\n                    <Row>\r\n                      {\r\n                        showAddLendSource === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newLendSourceName}\r\n                              onChange={(e)=> this.setState({newLendSourceName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewLendSourceName}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddLendSourceInput}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={lendsources[1]}\r\n                          name=\"clear\"\r\n                          options={lendsources}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddLendSource === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddLendSourceInput}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Financing Information</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col md=\"4\">\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\"Financed\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\"Funded\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\"Approved\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"financeperson\">Finance Person</Label>\r\n                    <Row>\r\n                      {\r\n                        showAddFinancePersonInput === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newFinanceName}\r\n                              onChange={(e)=> this.setState({newFinanceName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewFinancePersonName}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddFinancePersonInput}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={financePeople[1]}\r\n                          name=\"clear\"\r\n                          options={financePeople}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddFinancePersonInput === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddFinancePersonInput}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"discount\">Discount</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ discount: e.target.value })}\r\n                      value={this.state.discount}\r\n                      id=\"discount\"\r\n                      name=\"discount\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Discount\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col md=\"4\"></Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"lendingsource\">Lending Source</Label>                      \r\n                    <Row>\r\n                      {\r\n                        showAddNewLendingSource === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"new_desk_manager\"\r\n                              id=\"new_desk_manager\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newLendingSourceName}\r\n                              onChange={(e)=> this.setState({newLendingSourceName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewLendingSourceName}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showLendingSourceInput}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={lendingSources[1]}\r\n                          name=\"clear\"\r\n                          options={lendingSources}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddNewLendingSource === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showLendingSourceInput}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"datefunded\">Date Funded</Label>\r\n                    <Flatpickr\r\n                      className=\"form-control\"\r\n                      value={disabledRange}\r\n                      options={{ \r\n                        dateFormat: \"Y-m-d\",\r\n                        disable: [\r\n                            {\r\n                                from: \"2020-02-01\",\r\n                                to: \"2020-02-10\"\r\n                            },\r\n                            {\r\n                                from: \"2020-02-20\",\r\n                                to: \"2020-02-25\"\r\n                            }\r\n                        ]\r\n                      }}\r\n                      onChange={date => {\r\n                        this.setState({ disabledRange : date });\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"amountfinanced\">Amount Financed</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ amountfinanced: e.target.value })}\r\n                      value={this.state.amountfinanced}\r\n                      id=\"amountfinanced\"\r\n                      name=\"amountfinanced\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"trade1\">Trade<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={colourOptions[1]}\r\n                      name=\"clear\"\r\n                      options={colourOptions}\r\n                      isClearable={true}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"datesent\">Date Sent</Label>\r\n                    <Flatpickr\r\n                      className=\"form-control\"\r\n                      value={disabledRange}\r\n                      options={{ \r\n                        dateFormat: \"Y-m-d\",\r\n                        disable: [\r\n                            {\r\n                                from: \"2020-02-01\",\r\n                                to: \"2020-02-10\"\r\n                            },\r\n                            {\r\n                                from: \"2020-02-20\",\r\n                                to: \"2020-02-25\"\r\n                            }\r\n                        ]\r\n                      }}\r\n                      onChange={date => {\r\n                        this.setState({ disabledRange : date });\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"makeModel\">Make model</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ makeModel: e.target.value })}\r\n                      value={this.state.makeModel}\r\n                      id=\"makeModel\"\r\n                      name=\"makeModel\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"paymentsend\">Payment Send</Label>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={colourOptions[1]}\r\n                      name=\"clear\"\r\n                      options={colourOptions}\r\n                      isClearable={true}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"amountverify\">Amount Verified By</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ amountverify: e.target.value })}\r\n                      value={this.state.amountverify}\r\n                      id=\"amountverify\"\r\n                      name=\"amountverify\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"trade\">Trade<span style={{color: \"red\"}}>*</span></Label>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={colourOptions[1]}\r\n                      name=\"clear\"\r\n                      options={colourOptions}\r\n                      isClearable={true}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"acv\">Acv</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ acv: e.target.value })}\r\n                      value={this.state.acv}\r\n                      id=\"acv\"\r\n                      name=\"acv\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"year1\">Year</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ year1: e.target.value })}\r\n                      value={this.state.year1}\r\n                      id=\"year1\"\r\n                      name=\"year1\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\"></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"payoffAmount\">Payoff Amount</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ payoffAmount: e.target.value })}\r\n                      value={this.state.payoffAmount}\r\n                      id=\"payoffAmount\"\r\n                      name=\"payoffAmount\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"miles1\">Miles</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ miles1: e.target.value })}\r\n                      value={this.state.miles1}\r\n                      id=\"miles1\"\r\n                      name=\"miles1\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Last Name\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\"></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <div className=\"form-label-group mt-2\">\r\n                      <Label>Vehicle notes</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"text\"\r\n                        id=\"vehicleNotes\"\r\n                        rows=\"3\"\r\n                        placeholder=\"Vehicle notes\"\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                  <FormGroup>\r\n                    <div className=\"form-label-group mt-2\">\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"text\"\r\n                        id=\"lienInfo\"\r\n                        rows=\"3\"\r\n                        placeholder=\"Lien Info\"\r\n                      />\r\n                      <Label>Lien Info</Label>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Warranty and Gap Insurance Information</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                      <Label for=\"warranty\">Warranty</Label>\r\n                      <Row>\r\n                      {\r\n                        showAddNewWarrantyProvider === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"warranty_provider\"\r\n                              id=\"warranty_provider\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newWarrantyProviderName}\r\n                              onChange={(e)=> this.setState({newWarrantyProviderName: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewNewWarrantyProvider}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddNewWarrantyProvider}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={warranties[1]}\r\n                          name=\"clear\"\r\n                          options={warranties}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddNewWarrantyProvider === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddNewWarrantyProvider}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"warrantysaleprice\">Warranty Sale Price</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ warrantysaleprice: e.target.value })}\r\n                      value={this.state.warrantysaleprice}\r\n                      id=\"warrantysaleprice\"\r\n                      name=\"warrantysaleprice\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Warranty Sale Price\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"warrantyCost\">Warranty Cost</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"warrantyCost\"\r\n                      name=\"warrantyCost\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"gapInsurance\">Gap Insurance</Label>\r\n                    <Row>\r\n                      {\r\n                        showAddNewGapInsurance === true ? <Col md=\"12\" sm=\"12\" xs=\"12\" xl=\"12\" className=\"mb-2\">\r\n                        <Row>\r\n                          <Col xs=\"8\" sm=\"9\" md=\"9\" xl=\"9\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"gap_insurance\"\r\n                              id=\"gap_insurance\"\r\n                              placeholder=\"Input New Value\"\r\n                              value={newGapInsurnance}\r\n                              onChange={(e)=> this.setState({newGapInsurnance: e.target.value})}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"4\" sm=\"3\" md=\"3\"  className=\"task-actions\">\r\n                            <div className=\"d-inline-block mb-1 mr-1\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                onClick={this.addNewGapInsurance}\r\n                              >\r\n                                <Check size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                            <div className=\"d-inline-block mb-1 text-left\">\r\n                              {\" \"}\r\n                              <Button.Ripple\r\n                                className=\"btn-icon rounded-circle\"\r\n                                outline\r\n                                color=\"danger\"\r\n                                onClick={this.showAddNewGapInsurance}\r\n                              >\r\n                                <X size={30}  />\r\n                              </Button.Ripple>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col> :  <Col md=\"10\" sm=\"9\" xs=\"9\" className=\"mb-2\">\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={gapInsurances[1]}\r\n                          name=\"clear\"\r\n                          options={gapInsurances}\r\n                          isClearable={true}\r\n                        />\r\n                      </Col>\r\n                      }\r\n                      {\r\n                        showAddNewGapInsurance === true ? null : <Col md=\"2\" sm=\"3\" xs=\"3\"  className=\"mb-2\">\r\n                          <Button.Ripple color=\"primary\" onClick={this.showAddNewGapInsurance}>\r\n                            <Plus size={12}></Plus>\r\n                          </Button.Ripple>\r\n                        </Col>\r\n                      }\r\n                      </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"gapsaleprice\">Gap Sale Price</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ gapsaleprice: e.target.value })}\r\n                      value={this.state.gapsaleprice}\r\n                      id=\"gapsaleprice\"\r\n                      name=\"gapsaleprice\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Gap Sale Price\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"gapCost\">Gap Cost</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={e => this.setState({ gapCost: e.target.value })}\r\n                        value={this.state.gapCost}\r\n                        id=\"gapCost\"\r\n                        name=\"gapCost\"\r\n                        valid={this.state.isValid === true}\r\n                        invalid={this.state.isValid === false}\r\n                      />\r\n                      {this.state.isValid ? (\r\n                        <span className=\"valid-tooltip\">Looks Good!</span>\r\n                      ) : this.state.isValid === false ? (\r\n                        <span className=\"invalid-tooltip\">Please enter a Gap Cost</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"miscFinance\">Misc Finance</Label>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={colourOptions[1]}\r\n                      name=\"clear\"\r\n                      options={colourOptions}\r\n                      isClearable={true}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"miscfinancePrice\">Misc Finance Price</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ miscfinancePrice: e.target.value })}\r\n                      value={this.state.miscfinancePrice}\r\n                      id=\"miscfinancePrice\"\r\n                      name=\"miscfinancePrice\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Misc Finance Price\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"4\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"city\">Misc Finance Cost</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ city: e.target.value })}\r\n                      value={this.state.city}\r\n                      id=\"city\"\r\n                      name=\"city\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">Please enter a Misc Finance Cost</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label for=\"bankReserve\">Bank Reserve</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ bankReserve: e.target.value })}\r\n                      value={this.state.bankReserve}\r\n                      id=\"bankReserve\"\r\n                      name=\"bankReserve\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                    {this.state.isValid ? (\r\n                      <span className=\"valid-tooltip\">Looks Good!</span>\r\n                    ) : this.state.isValid === false ? (\r\n                      <span className=\"invalid-tooltip\">\r\n                        Please enter a Bank Reserve\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Deferred Down Payments</CardTitle>\r\n            <Button.Ripple color=\"primary\" onClick={this.addRowData}>\r\n              <Plus size={12}></Plus>\r\n            </Button.Ripple>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <ReactTable\r\n              data={data}\r\n              \r\n              columns={[\r\n                {\r\n                  Header: \"Status\",\r\n                  id: \"status\",\r\n                  accessor: d => (\r\n                    <h4>New</h4>\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Paid\",\r\n                  id: \"paid\",\r\n                  accessor: d => (\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={20} />}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Delete\",\r\n                  id: \"deleterow\",\r\n                  accessor: d => (\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={20} />}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Due date\",\r\n                  id: \"dueDate\",\r\n                  accessor: d => (\r\n                    <Flatpickr\r\n                      className=\"form-control\"\r\n                      value={disabledRange}\r\n                      options={{ \r\n                        dateFormat: \"Y-m-d\",\r\n                        disable: [\r\n                            {\r\n                                from: \"2020-02-01\",\r\n                                to: \"2020-02-10\"\r\n                            },\r\n                            {\r\n                                from: \"2020-02-20\",\r\n                                to: \"2020-02-25\"\r\n                            }\r\n                        ]\r\n                      }}\r\n                      onChange={date => {\r\n                        this.setState({ disabledRange : date });\r\n                      }}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Amount\",\r\n                  id: \"amount\",\r\n                  accessor: d => (\r\n                  <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ amount: e.target.value })}\r\n                      value={this.state.amount}\r\n                      name=\"amount\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Payment Method\",\r\n                  id: \"payment\",\r\n                  accessor: d => (\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={colourOptions[1]}\r\n                      name=\"clear\"\r\n                      options={colourOptions}\r\n                      isClearable={true}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"Note\",\r\n                  id: \"note\",\r\n                  accessor: d => (\r\n                  <Input\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ note: e.target.value })}\r\n                      value={this.state.note}\r\n                      name=\"note\"\r\n                      valid={this.state.isValid === true}\r\n                      invalid={this.state.isValid === false}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  Header: \"\",\r\n                  id: \"delete\",\r\n                  accessor: d => (\r\n                    <Trash2 size={30} onClick={this.deleteRowData} />\r\n                  )\r\n                }\r\n              ]}\r\n              defaultPageSize={10}\r\n              className=\"-striped -highlight\"\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Deal Note</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\">\r\n                <FormGroup>\r\n                    <div className=\"form-label-group mt-2\">\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"text\"\r\n                        id=\"deal_note\"\r\n                        rows=\"3\"\r\n                        placeholder=\"Deal Note\"\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" className=\"mb-2\"></Col>\r\n              </Row>\r\n              <Button.Ripple color=\"primary\" onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button.Ripple>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.calendar\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewDealApp) ","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n"],"sourceRoot":""}