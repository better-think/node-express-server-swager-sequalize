{"version":3,"sources":["views/reports/flooring.js","views/reports/CustomizeDeals.js"],"names":["Flooring","state","rowData","pinnedTopRowData","pinnedBottomRowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","columnDefs","headerName","field","filter","width","cellStyle","color","composeMailStatus","options","colors","props","themeColors","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","categories","tickAmount","series","data","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleComposeSidebar","status","onSetSidebarOpen","open","sidebarOpen","handleMainAndComposeSidebar","axios","get","then","response","tempdata","floored_by","deals","front","back_end","total_gross","colWidth","window","innerWidth","i","length","minWidth","push","Object","assign","JSON","stringify","this","initTable","nextprops","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","onClick","className","placeholder","onChange","e","target","value","Ripple","block","handleCustomize","exportDataAsCsv","type","height","currentStatus","style","paddingBottom","Consumer","context","gridOptions","rowSelection","floatingFilter","pagination","enableRtl","direction","rowHeight","React","Component","connect","app","calender","colourOptions","label","monthOptions","yearOptions","ComposeEmail","editorState","EditorState","createEmpty","basicPicker","Date","endPicker","selectedOption","onRadioChange","event","handleSidebarClose","emailTo","emailSub","emailCC","emailBCC","labelStyle","paddingTop","fontSize","zIndex","size","wheelPropagation","defaultChecked","name","sm","classNamePrefix","defaultValue","isDisabled","date","icon"],"mappings":"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","file":"static/js/33.0bb4dc06.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardBody, Input, Button, } from \"reactstrap\"\r\nimport { AgGridReact } from \"ag-grid-react\"\r\nimport { ContextLayout } from \"../../utility/context/Layout\"\r\n// import { ChevronDown } from \"react-feather\"\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Customize from \"./CustomizeDeals\"\r\nimport Chart from \"react-apexcharts\"\r\n\r\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\n\r\nimport \"../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\r\nimport \"../../assets/scss/plugins/tables/_customAgGridStyleOverride.scss\"\r\nimport \"../../assets/scss/pages/app-email.scss\"\r\n\r\nclass Flooring extends React.Component {\r\n    state = {\r\n        rowData: null,\r\n        pinnedTopRowData: [],\r\n        pinnedBottomRowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {},\r\n        columnDefs: [\r\n            {\r\n                headerName: \"Foored By\",\r\n                field: \"floored_by\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Deals\",\r\n                field: \"deals\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Front\",\r\n                field: \"front\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Back End\",\r\n                field: \"back_end\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n            {\r\n                headerName: \"Total Gross\",\r\n                field: \"total_gross\",\r\n                filter: true,\r\n                width: 180,\r\n                cellStyle: {color: 'black', 'font-size': \"14px\"}\r\n            },\r\n        ],\r\n        composeMailStatus: false,\r\n        options: {\r\n            colors: this.props.themeColors,\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            xaxis: {\r\n                categories: [\r\n                    \"DSC\"\r\n                ],\r\n                tickAmount: 5\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n              data: [10.0]\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/api/aggrid/data\").then(response => {\r\n        // let rowData = response.data.data // replace for product\r\n        let tempdata = {\r\n            floored_by: \"DSC\",\r\n            deals: \"10\",\r\n            front: \"$29,202.70\",\r\n            back_end: \"$9,746.00\",\r\n            total_gross: \"$38,948.00\",\r\n        };\r\n\r\n        let colWidth = window.innerWidth,\r\n        columnDefs = this.state.columnDefs\r\n\r\n        for (let i = 0; i < this.state.columnDefs.length; i++) {\r\n            columnDefs[i].width = (colWidth-(colWidth/5)) / this.state.columnDefs.length;\r\n            columnDefs[i].minWidth = 120;\r\n        }\r\n\r\n        let rowData = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            rowData.push(Object.assign({}, tempdata));\r\n        }\r\n\r\n        JSON.stringify(rowData)\r\n            this.setState({\r\n                rowData,\r\n                columnDefs\r\n            });\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initTable(this.props);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps (nextprops) {\r\n        this.initTable(nextprops);\r\n    }\r\n\r\n    initTable(props) {\r\n        let pinnedBottomRowData = [];\r\n        pinnedBottomRowData.push(\r\n            {\r\n                floored_by: \"Total\",\r\n                deals: \"10\",\r\n                front: \"$29,202.70\",\r\n                back_end: \"$9,746.00\",\r\n                total_gross: \"$38,948.00\",\r\n            }\r\n        );\r\n        pinnedBottomRowData.push(\r\n            {\r\n                floored_by: \"Average\",\r\n                front: \"$2,902.27\",\r\n                back_end: \"$974.60\",\r\n                total_gross: \"$10.0\",\r\n            }\r\n        );\r\n\r\n        this.setState({\r\n            pinnedBottomRowData,\r\n            composeMailStatus: false\r\n        });\r\n    }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api\r\n    this.gridColumnApi = params.columnApi\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages()\r\n    })\r\n  }\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val)\r\n  }\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val))\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val\r\n      })\r\n    }\r\n  }\r\n  handleCustomize() {\r\n    this.handleComposeSidebar(\"open\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n  handleComposeSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        composeMailStatus: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        composeMailStatus: false\r\n      })\r\n    }\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n  handleMainAndComposeSidebar = () => {\r\n    this.handleComposeSidebar(\"close\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n\r\n  render() {\r\n    const { rowData, defaultColDef, pinnedBottomRowData } = this.state\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <Breadcrumbs breadCrumbTitle=\"Flooring\" breadCrumbParent=\"Reports\" breadCrumbActive=\"Flooring\"/>\r\n        <Card onClick={this.handleMainAndComposeSidebar}>\r\n            <CardBody>\r\n                <div className=\"d-flex flex-wrap justify-content-end align-items-center\">\r\n                    <div className=\"mb-1\"></div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                            <Input placeholder=\"search...\" onChange={e => this.updateSearchQuery(e.target.value)} value={this.state.value} />\r\n                        </div>\r\n                        <div className=\"customize-btn\">\r\n                            <Button.Ripple block color=\"primary\" onClick={() => this.handleCustomize()} >\r\n                                Customize\r\n                            </Button.Ripple>\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                            <Button.Ripple color=\"primary\" onClick={() => this.gridApi.exportDataAsCsv()} >\r\n                                Export as CSV\r\n                            </Button.Ripple>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Chart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n                <div className=\"d-flex flex-wrap mb-1\">\r\n                    <div className=\"mr-1\">\r\n                        <Button.Ripple block color=\"primary\">\r\n                            Total Sales\r\n                        </Button.Ripple>\r\n                    </div>\r\n                    <div className=\"mr-1\">\r\n                        <Button.Ripple block color=\"primary\">\r\n                            Total Gross\r\n                        </Button.Ripple>\r\n                    </div>\r\n                    <div className=\"mr-1\">\r\n                        <Button.Ripple block color=\"primary\">\r\n                            Average Gross\r\n                        </Button.Ripple>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n        <div className=\"email-application\">\r\n            <Customize handleComposeSidebar={this.handleComposeSidebar} currentStatus={this.state.composeMailStatus}/>\r\n            <Card className=\"agGrid-card\" style={{height: \"100% !important\", paddingBottom: \"2%\"}} onClick={this.handleMainAndComposeSidebar}>\r\n                <CardBody className=\"py-0\" style={{height: \"100% !important\"}}>\r\n                {\r\n                this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\" style={{height: \"100% !important\", width: \"100% !important\"}}>\r\n                        <ContextLayout.Consumer>\r\n                            {context => (\r\n                            <AgGridReact\r\n                                gridOptions={{}}\r\n                                rowSelection=\"multiple\"\r\n                                defaultColDef={defaultColDef}\r\n                                columnDefs={this.state.columnDefs}\r\n                                rowData={rowData}\r\n                                onGridReady={this.onGridReady}\r\n                                floatingFilter={true}\r\n                                pagination={true}\r\n                                enableRtl={context.state.direction === \"rtl\"}\r\n                                \r\n                                pinnedBottomRowData={pinnedBottomRowData}\r\n                                rowHeight=\"40\"\r\n                            />\r\n                            )}\r\n                        </ContextLayout.Consumer>\r\n                    </div>\r\n                )}\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state.calender\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Flooring);\r\n","import React from \"react\"\r\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"reactstrap\"\r\nimport Radio from \"../../components/@vuexy/radio/RadioVuexy\"\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport { Check } from \"react-feather\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { EditorState } from \"draft-js\"\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport \"../../assets/scss/plugins/extensions/editor.scss\"\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\n\r\nconst colourOptions = [\r\n    { value: \"0\", label: \"Active Deals\" },\r\n    { value: \"1\", label: \"Deleted Deals\" },\r\n    { value: \"2\", label: \"All Deals\" },\r\n]\r\n\r\nconst monthOptions = [\r\n    { value: \"1\", label: \"01 Jan\" },\r\n    { value: \"2\", label: \"02 Feb\" },\r\n    { value: \"3\", label: \"03 Mar\" },\r\n    { value: \"4\", label: \"04 Apr\" },\r\n    { value: \"5\", label: \"05 May\" },\r\n    { value: \"6\", label: \"06 Jun\" },\r\n    { value: \"7\", label: \"07 Jul\" },\r\n    { value: \"8\", label: \"08 Aug\" },\r\n    { value: \"9\", label: \"09 Sep\" },\r\n    { value: \"10\", label: \"10 Oct\" },\r\n    { value: \"11\", label: \"11 Nov\" },\r\n    { value: \"12\", label: \"12 Dec\" },\r\n]\r\n\r\nconst yearOptions = [\r\n    { value: \"0\", label: \"2020\" },\r\n    { value: \"1\", label: \"2019\" },\r\n    { value: \"2\", label: \"2018\" },\r\n    { value: \"3\", label: \"2017\" },\r\n    { value: \"4\", label: \"2016\" },\r\n    { value: \"5\", label: \"2015\" },\r\n    { value: \"6\", label: \"2014\" },\r\n    { value: \"7\", label: \"2013\" },\r\n    { value: \"8\", label: \"2012\" },\r\n    { value: \"9\", label: \"2011\" },\r\n    { value: \"10\", label: \"2010\" },\r\n    { value: \"11\", label: \"2009\" },\r\n    { value: \"12\", label: \"2008\" },\r\n]\r\n\r\nclass ComposeEmail extends React.Component {\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        basicPicker : new Date(),\r\n        endPicker: new Date(),\r\n\r\n        selectedOption: \"\",\r\n    }\r\n\r\n    onRadioChange = (event) => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSidebarClose = () => {\r\n        this.props.handleComposeSidebar(\"close\")\r\n        this.setState({\r\n            emailTo: \"\",\r\n            emailSub: \"\",\r\n            emailCC: \"\",\r\n            emailBCC: \"\",\r\n            editorState: EditorState.createEmpty()\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { basicPicker, endPicker } = this.state\r\n    const labelStyle = {\r\n        paddingTop: \"15px\",\r\n        color: \"#0c0000\",\r\n        fontSize: \"13px\",\r\n    }\r\n    return (\r\n    <Card className={`compose-email ${ this.props.currentStatus ? \"open\" : \"\" }`} style={{zIndex: \"11\"}}>\r\n        <CardHeader className=\"compose-mail-header align-items-center\">\r\n            <div className=\"compose-mail-title\">\r\n                <h3 className=\"text-bold-600 card-title\">Customize Report</h3>\r\n            </div>\r\n            <div className=\"close-compose-mail\" onClick={() => this.props.handleComposeSidebar(\"close\")} >\r\n                <X size={20} />\r\n            </div>\r\n        </CardHeader>\r\n        <PerfectScrollbar options={{ wheelPropagation: false }} >\r\n            <CardBody className=\"compose-mail-body p-1\">\r\n                <Radio\r\n                    label=\"Month to Date\"\r\n                    color=\"primary\"\r\n                    defaultChecked={true}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"MonthToDate\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Today\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Today\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Custom Range\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"CustomRange\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"All Time\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"AllTime\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Previous Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"PreviousMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Yesterday\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"Yesterday\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Radio\r\n                    label=\"Select Month\"\r\n                    color=\"primary\"\r\n                    defaultChecked={false}\r\n                    name=\"exampleRadioSizes\"\r\n                    className=\"py-50\"\r\n                    value=\"SelectMonth\"\r\n                    onChange={this.onRadioChange}\r\n                />\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={monthOptions[0]}\r\n                            name=\"color\"\r\n                            options={monthOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <Select\r\n                            className=\"React\"\r\n                            classNamePrefix=\"select\"\r\n                            defaultValue={yearOptions[0]}\r\n                            name=\"color\"\r\n                            options={yearOptions}\r\n                            isDisabled = {this.state.selectedOption === \"SelectMonth\" ? false : true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle} >Basic</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={basicPicker}\r\n                            onChange={date => {\r\n                                this.setState({ basicPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <h5 className=\"text-bold-500\" style = {labelStyle}>End</h5>\r\n                        <Flatpickr\r\n                            className=\"form-control\"\r\n                            value={endPicker}\r\n                            onChange={date => {\r\n                                this.setState({ endPicker : date });\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"New Car\"\r\n                    defaultChecked={false}\r\n                />\r\n                <h5 style = {labelStyle}>Deleted</h5>\r\n                <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={colourOptions[0]}\r\n                    name=\"color\"\r\n                    options={colourOptions}\r\n                />\r\n                <div className=\"action-btns d-flex justify-content-end mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"danger\"\r\n                    className=\"mr-1\"\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    // disabled={this.state.emailTo.length && this.state.emailBody.length > 0 ? false : true}\r\n                    onClick={() => this.handleSidebarClose()}\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n            </CardBody>\r\n        </PerfectScrollbar>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComposeEmail\r\n"],"sourceRoot":""}